#include <iostream>
using namespace std;

void sumProd(int *arr, int size, int *sum, int *prod) {
    *sum = 0;
    *prod = 1;
    for (int i = 0; i < size; i++) {
        *sum += *(arr + i);
        *prod *= *(arr + i);
    }
}

void countEl(int *arr, int size, int *neg, int *pos, int *zero) {
    *neg = *pos = *zero = 0;
    for (int i = 0; i < size; i++) {
        int value = *(arr + i);
        if (value < 0)
            (*neg)++;
        else if (value > 0)
            (*pos)++;
        else
            (*zero)++;
    }
}

void appendBlock(int *&arr, int &size, int *block, int blockSize) {
    int *newArr = new int[size + blockSize];
    for (int i = 0; i < size; i++) {
        *(newArr + i) = *(arr + i);
    }
    for (int i = 0; i < blockSize; i++) {
        *(newArr + size + i) = *(block + i);
    }
    delete[] arr;
    arr = newArr;
    size += blockSize;
}

int main() {
    int arr1[] = {2, 3, 4};
    int size1 = 3;
    int sum, product;
    sumProd(arr1, size1, &sum, &product);
    cout << "task 1 result:" << endl;
    cout << "sum: " << sum << endl;
    cout << "product: " << product << endl;
    cout << endl;

    int arr2[] = {-1, 0, 5, 0, -3, 6};
    int size2 = 6;
    int neg, pos, zero;
    countEl(arr2, size2, &neg, &pos, &zero);
    cout << "task 2 result:" << endl;
    cout << "negative: " << neg << ", positive: " << pos << ", zeros: " << zero << endl;
    cout << endl;

    int size3 = 3;
    int *arr3 = new int[size3]{1, 2, 3};
    int block[] = {8, 9};
    int blockSize = 2;
    appendBlock(arr3, size3, block, blockSize);
    cout << "task 5 result:" << endl;
    cout << "array after append: ";
    for (int i = 0; i < size3; i++) {
        cout << *(arr3 + i) << " ";
    }
    cout << endl;
    delete[] arr3;

    return 0;
}
